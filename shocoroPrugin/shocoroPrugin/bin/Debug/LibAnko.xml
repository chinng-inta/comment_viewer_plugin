<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibAnko</name>
    </assembly>
    <members>
        <member name="T:LibAnko.Utility">
            <summary>
            アンコちゃん用共用関数
            </summary>
        </member>
        <member name="F:LibAnko.Utility.debugmode">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.Utility.Win32MSG">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.Utility.GetSystemInfo(LibAnko.Utility.SYSTEM_INFO@)">
            <summary>
            
            </summary>
            <param name="ptmpsi"></param>
        </member>
        <member name="T:LibAnko.Utility.SYSTEM_INFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.dwOemId">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.dwPageSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.lpMinimumApplicationAddress">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.lpMaximumApplicationAddress">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.dwActiveProcessorMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.dwNumberOfProcessors">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.dwProcessorType">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.dwAllocationGranularity">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.dwProcessorLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.SYSTEM_INFO.dwProcessorRevision">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.Utility.ProcessMessage(System.Windows.Forms.Control)">
            <summary>
            未処理のメッセージを全て処理する．
            </summary>
            <returns>アプリケーションの実行を継続すべきならtrue，終了すべきならfalseが返る．</returns>
        </member>
        <member name="M:LibAnko.Utility.ProcessMessage">
            <summary>
            Application.DoEventsの代用
            </summary>
            <returns></returns>
        </member>
        <member name="P:LibAnko.Utility.pubcookieContainer">
            <summary>
            ライブラリで使用するクッキーをセット
            </summary>
        </member>
        <member name="P:LibAnko.Utility.pubcookie">
            <summary>
            ライブラリで使用するクッキーをセット
            </summary>
        </member>
        <member name="F:LibAnko.Utility.isNetworkAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.Utility.autocolor_HueInc_const">
            <summary>
            色相増加量 定数
            </summary>
        </member>
        <member name="F:LibAnko.Utility.autocolor_HueInc_r">
            <summary>
            色相増加量 係数
            </summary>
        </member>
        <member name="F:LibAnko.Utility.autocolor_Chroma_const">
            <summary>
            彩度 定数
            </summary>
        </member>
        <member name="F:LibAnko.Utility.autocolor_Chroma_r">
            <summary>
            彩度 係数
            </summary>
        </member>
        <member name="F:LibAnko.Utility.autocolor_Brightness_const">
            <summary>
            明度 定数
            </summary>
        </member>
        <member name="F:LibAnko.Utility.autocolor_Brightness_r">
            <summary>
            明度 係数
            </summary>
        </member>
        <member name="F:LibAnko.Utility.color_bsp">
            <summary>
            BSPで使用できる色の一覧
            </summary>
        </member>
        <member name="F:LibAnko.Utility.color_ippan">
            <summary>
            一般で使用できる色の一覧
            </summary>
        </member>
        <member name="F:LibAnko.Utility.color_premium">
            <summary>
            プレミアムで使用できる色の一覧
            </summary>
        </member>
        <member name="F:LibAnko.Utility.color_bsp_code">
            <summary>
            BSPで使用できる色のコード
            </summary>
        </member>
        <member name="F:LibAnko.Utility.color_ippan_code">
            <summary>
            一般で使用できる色のコード
            </summary>
        </member>
        <member name="F:LibAnko.Utility.color_premium_code">
            <summary>
            プレミアで使用できる色のコード
            </summary>
        </member>
        <member name="M:LibAnko.Utility.GetConnectedState">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:LibAnko.Utility._htmlTagRemover">
            <summary>
            HTMLタグ除去用
            </summary>
        </member>
        <member name="F:LibAnko.Utility._xmlInvalidRemover">
            <summary>
            XML不許可文字除去用
            </summary>
        </member>
        <member name="M:LibAnko.Utility.ScanVideoId(System.String)">
            <summary>
            動画部分だけ取り出し
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.setNumeric(System.Windows.Forms.NumericUpDown,System.Int32)">
            <summary>
            
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetVideoId(System.String)">
            <summary>
            urlから動画部分だけ取り出し
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getUrl(System.String)">
            <summary>
            文字列からURLとりだし
            </summary>
            <param name="s">文字列</param>
            <returns>なかったらNull</returns>
        </member>
        <member name="M:LibAnko.Utility.isVideo(System.String)">
            <summary>
            動画IDかどうかの判定
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.SelectString(System.Xml.XmlNode,System.String)">
            <summary>
            XMLノードから文字列を取得する
            </summary>
            <param name="node"></param>
            <param name="xpath"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.SelectDateTime(System.Xml.XmlNode,System.String)">
            <summary>
            ｘｍｌから日時項目を取り出す
            </summary>
            <param name="node"></param>
            <param name="xpath"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.ExportCommentXML(LibAnko.broadcast,LibAnko.chat[],System.String)">
            <summary>
            XML形式でチャット出力
            </summary>
            <param name="cast"></param>
            <param name="chats"></param>
            <param name="filename"></param>
        </member>
        <member name="M:LibAnko.Utility.getCountryName(System.String)">
            <summary>
            
            </summary>
            <param name="cd"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.ExportCommentText(LibAnko.broadcast,LibAnko.chat[],System.String,System.Boolean)">
            <summary>
            テキスト形式でチャット出力
            </summary>
            <param name="cast"></param>
            <param name="chats"></param>
            <param name="filename"></param>
            <param name="all"></param>
        </member>
        <member name="M:LibAnko.Utility.SelectInt(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            XMLノードから整数値を取得する
            </summary>
            <param name="node"></param>
            <param name="xpath"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.SelectDateTime(System.Xml.XmlNode,System.String,System.DateTime)">
            <summary>
            XMLノードから日付を取得する
            </summary>
            <param name="node"></param>
            <param name="xpath"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.UnixTimeToDateTime(System.Int32)">
            <summary>
            Unix時間をDateTimeに変換する
            </summary>
            <param name="UnixTime"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.DateTimeToUnixTime(System.DateTime)">
            <summary>
            DateTimeをUnix時間に変換する
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.serialTimeJSTtoLocal(System.Int32)">
            <summary>
            JSTのシリアル値をローカルの値に変換
            </summary>
            <param name="unixtime"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.JSTtoLocal(System.DateTime)">
            <summary>
            
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.Unsanitizing(System.String)">
            <summary>
            HTML中の記号表記を、記号に変換
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.Sanitizing(System.String)">
            <summary>
            記号をHTML中に使える記号表記に変換
            </summary>
            <param name="srcstr"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetPostKey(System.Int32,System.Int32)">
            <summary>
            コメント投稿用postkey取得
            </summary>
            <param name="thread">スレッド番号</param>
            <param name="blkno">コメ番/100の値</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetPostKey2(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="thread"></param>
            <param name="blkno"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetPostKey25(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="thread"></param>
            <param name="blkno"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetWayBackKey(System.Int32)">
            <summary>
            過去ログ取得用キー
            </summary>
            <param name="thread">スレッド番号</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.SendNGCommand(System.String,LibAnko.NGClient.MODE,System.String,LibAnko.NGClient.TYPE)">
            <summary>
            NG登録コマンドの送信
            </summary>
            <param name="liveId"></param>
            <param name="mode"></param>
            <param name="source"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetResponseText(System.String,System.Net.CookieContainer,System.Int32,System.String@)">
            <summary>
            指定したURLのページを取得
            </summary>
            <param name="url">取得したいURL</param>
            <param name="cookies"></param>
            <param name="defaultTimer"></param>
            <param name="rescode"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetResponseText(System.String,System.String,System.Int32,System.String@)">
            <summary>
            指定したURLのページを取得
            </summary>
            <param name="url">取得したいURL</param>
            <param name="cookie"></param>
            <param name="defaultTimer"></param>
            <param name="rescode"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetPlayerStatus(System.String,System.Boolean)">
            <summary>
            放送情報取得
            </summary>
            <param name="liveid"></param>
            <param name="counts"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.checkScreenPosition(System.Windows.Forms.Form)">
            <summary>
            
            </summary>
            <param name="checkform"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getpublishstatus(System.String)">
            <summary>
            
            </summary>
            <param name="liveid"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.loadArrayStr(System.Xml.Linq.XElement,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="subcat"></param>
            <param name="name"></param>
            <param name="def"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.saveArrayStr(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="arraystr"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLiveidFromString(System.String)">
            <summary>
            文字列から放送IDをとりだす
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.answerVote(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="lv"></param>
            <param name="sel"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetResponseText(System.String,System.Int32,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="timeout"></param>
            <param name="rescode"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetNowTime">
            <summary>
            日時＋ミリ秒の文字列を返します
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetPlayerStatusInfoMsg(System.String)">
            <summary>
            getplayerstatusの返り値からわかりやすいように変換
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetCommunityList">
            <summary>
            参加コミュニティーを取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.PostBSPComment(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            BSPコメントを送信します
            </summary>
            <param name="liveId"></param>
            <param name="message"></param>
            <param name="color"></param>
            <param name="token">放送ページのtokenをセット</param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getIdFromSession(System.String)">
            <summary>
            session文字列からIDを取得
            </summary>
            <param name="Sessionstring"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.Str2MD5(System.String)">
            <summary>
            文字列をMD5に変換
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getMyName(System.Net.CookieContainer)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getMyName(System.String)">
            <summary>
            
            </summary>
            <param name="cookieHeader"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getSalesList(System.String)">
            <summary>
            指定したポイントのメニューが存在するかチェックする
            </summary>
            <param name="liveid">放送ID</param>
            <returns>メニューのデータ</returns>
        </member>
        <member name="M:LibAnko.Utility.RequestExtend(LibAnko.broadcast,LibAnko.Utility.clsSalesList)">
            <summary>
            指定したメニューで延長する
            </summary>
            <param name="cast">放送情報</param>
            <param name="salesinfo">getSalesListで取得したメニューのデータ</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.RequestExtend2(LibAnko.broadcast,LibAnko.Utility.clsSalesList)">
            <summary>
            指定したメニューで延長する get ver
            </summary>
            <param name="cast">放送情報</param>
            <param name="salesinfo">getSalesListで取得したメニューのデータ</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.FreeExtend(LibAnko.broadcast)">
            <summary>
            
            </summary>
            <param name="cast"></param>
            <returns></returns>
        </member>
        <member name="T:LibAnko.Utility.clsSalesList">
            <summary>
            延長メニューリストのアイテム
            </summary>
        </member>
        <member name="P:LibAnko.Utility.clsSalesList.label">
            <summary>
            表記
            </summary>
        </member>
        <member name="P:LibAnko.Utility.clsSalesList.price">
            <summary>
            金額
            </summary>
        </member>
        <member name="P:LibAnko.Utility.clsSalesList.number">
            <summary>
            番号
            </summary>
        </member>
        <member name="P:LibAnko.Utility.clsSalesList.code">
            <summary>
            コード
            </summary>
        </member>
        <member name="P:LibAnko.Utility.clsSalesList.itemcode">
            <summary>
            アイテムコード
            </summary>
        </member>
        <member name="M:LibAnko.Utility.clsSalesList.#ctor(System.Xml.XmlNode)">
            <summary>
            コンストラクタ
            </summary>
            <param name="salesinfo"></param>
        </member>
        <member name="M:LibAnko.Utility.getMemberName(LibAnko.UserInfo)">
            <summary>
            プロフィールから名前を取得
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getMemberName2(LibAnko.UserInfo)">
            <summary>
            プロフィールから名前を取得
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getCommnityInfo(System.String)">
            <summary>
            指定されたコミュニティーの情報を取得
            </summary>
            <param name="cid"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.check_isMember(LibAnko.UserInfo)">
            <summary>
            主のときに、指定してたユーザーがコミュメンバーかチェックする
            </summary>
            <param name="user"></param>
            <returns>184か、コミュメンバーでないときfalse</returns>
        </member>
        <member name="M:LibAnko.Utility.Serialize(System.String,System.Object)">
            <summary>
            オブジェクトをシリアライズしてファイルに保存します
            </summary>
            <param name="path"></param>
            <param name="graph"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.Deserialize(System.String)">
            <summary>
            ファイルからオブジェクト取得
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.HtmlDecode(System.String)">
            <summary>
            HTMLデコード
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.StripErrChar(System.String)">
            <summary>
            XML禁止文字をフィルターします
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.SettingString(System.String,System.String)">
            <summary>
            値取得時にエラー処理後、デフォルト値をセット
            </summary>
            <param name="v">未チェックの変数</param>
            <param name="defaultValue">エラーか、空っぽだったら使用する値</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.VposToTimeString(System.Int32)">
            <summary>
            Vpos値から時間の文字列へ変換
            </summary>
            <param name="vpos">vpos値</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.VposToSecond(System.Int32)">
            <summary>
            Vpos値を秒へ変換
            </summary>
            <param name="vpos"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.PostData(System.String,System.String,System.Text.Encoding,System.Net.CookieContainer,System.String)">
            <summary>
            POSTメソッドを送信し、返り値を取得
            </summary>
            <param name="url">URL</param>
            <param name="data">リクエスト時に付与するデータ</param>
            <param name="encoding">受信するデータのエンコードを指定</param>
            <param name="cookies">クッキーを指定</param>
            <param name="referer"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.PostData(System.String,System.String,System.Text.Encoding,System.String,System.String)">
            <summary>
            POSTメソッドを送信し、返り値を取得
            </summary>
            <param name="url">URL</param>
            <param name="data">リクエスト時に付与するデータ</param>
            <param name="encoding">受信するデータのエンコードを指定</param>
            <param name="cookies">クッキーを指定</param>
            <param name="referer"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.GetNextColor">
            <summary>
            自動背景色取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.HSVToColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            HSV表記からRGB表記へ変換します。
            </summary>
            <param name="h">色相(Hue)(0-359)</param>
            <param name="s">彩度(Saturation)(0-255)</param>
            <param name="v">明度(Value)(0-255)</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.ColorToHSV(System.Drawing.Color,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            RGB表記からHSV表記へ変換します。
            </summary>
            <param name="c">赤(Red)</param>
            <param name="h">色相(Hue)</param>
            <param name="s">彩度(Saturation)</param>
            <param name="v">明度(Value)</param>
        </member>
        <member name="M:LibAnko.Utility.createThumbnail(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            指定された大きさに画像を変更
            </summary>
            <param name="image"></param>
            <param name="w"></param>
            <param name="h"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.createThumbnailSmooth(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            画像の四隅をスムーズリサイズします
            </summary>
            <param name="image"></param>
            <param name="w"></param>
            <param name="h"></param>
            <param name="bcolor">背景色</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.CreateRoundedRectangle(System.Int32,System.Int32)">
            <summary>
            角丸領域のパスを生成します
            </summary>
            <param name="width">画像の幅</param>
            <param name="height">画像の高さ</param>
            <returns>GraphicsPath</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:LibAnko.Utility.checkCache(System.String,System.String,System.String,System.Boolean)">
            <summary>
            キャッシュを確認し、存在すれば縮小して返す,存在しなければダウンロードを指示
            </summary>
            <param name="userid"></param>
            <param name="imagepath"></param>
            <param name="filepath"></param>
            <param name="noAsync"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.SwapImage(System.Windows.Forms.DataGridViewCellValueEventArgs,System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="newImage"></param>
        </member>
        <member name="M:LibAnko.Utility.SwapImage(System.Windows.Forms.PictureBox,System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="pictureBox"></param>
            <param name="newImage"></param>
        </member>
        <member name="M:LibAnko.Utility.SwapImage(System.Windows.Forms.ToolStripButton,System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="toolStripButton"></param>
            <param name="newImage"></param>
        </member>
        <member name="M:LibAnko.Utility.DownloadImage(System.Object)">
            <summary>
            
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:LibAnko.Utility.LoadImage(System.String)">
            <summary>
            イメージダウンロード
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:LibAnko.Utility.GetImageArg">
            <summary>
            非同期でサムネイル取得用
            </summary>
        </member>
        <member name="F:LibAnko.Utility.GetImageArg.id">
            <summary>
            ユーザID
            </summary>
        </member>
        <member name="F:LibAnko.Utility.GetImageArg.imagePath">
            <summary>
            イメージのローカル側
            </summary>
        </member>
        <member name="F:LibAnko.Utility.GetImageArg.IconPath">
            <summary>
            プロフィールイメージ画像のパス
            </summary>
        </member>
        <member name="M:LibAnko.Utility.GetImageArg.#ctor(System.String,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="id"></param>
            <param name="path"></param>
            <param name="Icon"></param>
        </member>
        <member name="M:LibAnko.Utility.CMD2COLOR(System.String)">
            <summary>
            mailフィールドを解析し、色に変換
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.Check184(System.String)">
            <summary>
            IDが数字のみか、そうじゃないか判断します
            </summary>
            <param name="id"></param>
            <returns>184のときtrue</returns>
        </member>
        <member name="M:LibAnko.Utility.ChukeiColor(System.String)">
            <summary>
            /chukeiの色コードを色に変換
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getHeartBeat(LibAnko.HeartBeatInfo)">
            <summary>
            ハートビート
            </summary>
            <param name="info">HeartBeatInfoを指定</param>
            <returns>成否</returns>
        </member>
        <member name="M:LibAnko.Utility.getHeartBeatOnce(LibAnko.HeartBeatInfo)">
            <summary>
            ハートビート
            </summary>
            <param name="info">HeartBeatInfoを指定</param>
            <returns>成否</returns>
        </member>
        <member name="M:LibAnko.Utility.getLocalThumbnail(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="IconPath"></param>
            <param name="communityId"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLocalThumbnail(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="IconPath"></param>
            <param name="communityId"></param>
            <param name="catcheDays"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getServerThumbnail(System.String,System.String,System.Drawing.Bitmap,System.Boolean)">
            <summary>
            
            </summary>
            <param name="IconPath"></param>
            <param name="communityId"></param>
            <param name="defaultImage"></param>
            <param name="must"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getServerThumbnail(System.String,System.String,System.Drawing.Bitmap,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="IconPath"></param>
            <param name="communityId"></param>
            <param name="defaultImage"></param>
            <param name="must"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.check_tagupdate(System.String,System.String@,System.Int32@)">
            <summary>
            タグ更新チェック
            </summary>
        </member>
        <member name="M:LibAnko.Utility.DoInvoke(System.Windows.Forms.MethodInvoker,System.Windows.Forms.Control)">
            <summary>
            Invoke判定
            </summary>
            <param name="method"></param>
            <param name="c"></param>
        </member>
        <member name="M:LibAnko.Utility.ParseServerDate(System.String)">
            <summary>
            サーバー日付変換
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.DateToServerDateString(System.DateTime)">
            <summary>
            
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.IsZenkakuJapanese(System.Char)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.ToKatakana(System.Char)">
            <summary>
            ひらがなをカタカナに変換
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.ToHiragana(System.Char)">
            <summary>
            カタカナを平がなに変換
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.IsHiragana(System.Char)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.IsKatakana(System.Char)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getNsenUrl(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.checkUrl2(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.ChikuwaChanCheck(LibAnko.chikuwainfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.IsSupportOS">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getChikuwaTable">
            <summary>
            ちくわちゃんランキングを配列で取り出し
            </summary>
            <param name="html">htmlのテキスト形式</param>
            <returns>1ランクずつの文字配列 </returns>
        </member>
        <member name="M:LibAnko.Utility.splitChikuwaTable(System.String)">
            <summary>
            ちくわちゃんランキングを配列で取り出し
            </summary>
            <param name="html">htmlのテキスト形式</param>
            <returns>1ランクずつの文字配列 </returns>
        </member>
        <member name="M:LibAnko.Utility.GetOS">
             <summary>
             OSの種別を返す
             </summary>
             <returns>
            Windows 2000
            "2000"
            Windows XP
            "XP"
            Windows Server 2003
            "2003"
            Windows Vista または Windows Server 2008
            "2008"
            Windows 7 または Windows Server 2008 R2
            "2008R2"
            Win32s
            "W32S"
            Windows CE
            "CE"
            Unix
            "UNIX"
            Xbox 360
            "XBOX"
            Macintosh
            "MAC"
            （不明）
            "Unknown"
             </returns>
        </member>
        <member name="M:LibAnko.Utility.TryColor(System.String)">
            <summary>
            色コード・名をColorに変換してみる
            </summary>
            <param name="colstr"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.LoadSettingError(System.Windows.Forms.Control,System.String,System.String)">
            <summary>
            プラグイン設定ファイルエラー用
            </summary>
            <param name="owner"></param>
            <param name="title"></param>
            <param name="fname"></param>
        </member>
        <member name="M:LibAnko.Utility.openExploler(System.String,System.Boolean)">
            <summary>
            エクスプローラでフォルダー表示
            </summary>
            <param name="path"></param>
            <param name="showTree"></param>
        </member>
        <member name="M:LibAnko.Utility.getNGLists(System.String)">
            <summary>
            
            </summary>
            <param name="lid"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getCruiseLiveid">
            <summary>
            ニコ生クルーズの放送ID取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getExpandUrl(System.String)">
            <summary>
            転送先URL取得
            </summary>
            <param name="shortUrl"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.SplitByWhiteSpace(System.String)">
            <summary>
            スペース区切りを配列に変換
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLinqBool(System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            Linq変数からbool値取り出し
            </summary>
            <param name="obj">linq</param>
            <param name="def">デフォルト値</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLinqBool2(System.Xml.Linq.XElement,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="def"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLinqStr(System.Xml.Linq.XElement,System.String)">
            <summary>
            Linq変数からString値取り出し
            </summary>
            <param name="obj">linq</param>
            <param name="def">デフォルト値</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLinqStr2(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="def"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLinqInt(System.Xml.Linq.XElement,System.Int32)">
            <summary>
            Linq変数からInt値取り出し
            </summary>
            <param name="obj">linq</param>
            <param name="def">デフォルト値</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLinqInt2(System.Xml.Linq.XElement,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="def"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLinqFloat(System.Xml.Linq.XElement,System.Single)">
            <summary>
            Linq変数からfloat値取り出し
            </summary>
            <param name="obj">linq</param>
            <param name="def">デフォルト値</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getLinqFloat2(System.Xml.Linq.XElement,System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="def"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.buildFont(System.String,System.Boolean,System.Boolean,System.Single)">
            <summary>
            
            </summary>
            <param name="fontname"></param>
            <param name="bold"></param>
            <param name="italic"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.ClearEvent(System.ComponentModel.Component)">
            <summary>
            
            </summary>
            <param name="comp"></param>
        </member>
        <member name="M:LibAnko.Utility.URLshorter_mcafee(System.String)">
            <summary>
            MacafeeURL短縮サービスで短縮
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.URLexpand_mcafee(System.String)">
            <summary>
            MacafeeURL短縮サービスのアドレスを復元
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.tryInt(System.String)">
            <summary>
            文字をintへ変換
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getIchibaList(System.String)">
            <summary>
            市場一覧を取り出す
            </summary>
            <param name="liveid"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getNicoAPItoken">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getMovieInfo(LibAnko.MovieInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.isCommunityMember(System.String)">
            <summary>
            コミュニティメンバーか確認
            </summary>
            <param name="coid"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getIchibaItemTag(System.String)">
            <summary>
            市場のアイテムごとのタグを取得します。
            </summary>
            <param name="itemid"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.getCpuCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.makeIcon(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            
            </summary>
            <param name="ch"></param>
            <param name="font"></param>
            <param name="fcolor"></param>
            <param name="bcolor"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.writeDebugText(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:LibAnko.Utility.MakeKey">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.DecryptString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.EncryptString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.ResizeBytesArray(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="newSize"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.Utility.printDebug(System.Int32)">
            <summary>
            
            </summary>
            <param name="arg0"></param>
        </member>
        <member name="M:LibAnko.Utility.printDebug(System.String)">
            <summary>
            
            </summary>
            <param name="arg0"></param>
        </member>
        <member name="M:LibAnko.Utility.printDebug(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
        </member>
        <member name="M:LibAnko.Utility.printDebug(System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
        </member>
        <member name="M:LibAnko.Utility.printDebug(System.String,System.Object,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="M:LibAnko.Utility.printDebug(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:LibAnko.NicoVersion">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.countrycode">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.ichibaItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.ichibaItem.Code">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.ichibaItem.Title">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.ichibaItem.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="title"></param>
        </member>
        <member name="T:LibAnko.IchibaComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.IchibaComparer.Equals(LibAnko.ichibaItem,LibAnko.ichibaItem)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.IchibaComparer.GetHashCode(LibAnko.ichibaItem)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:LibAnko.LiveLogInfo">
            <summary>
            データベース用放送情報クラス
            </summary>
        </member>
        <member name="M:LibAnko.LiveLogInfo.ToString">
            <summary>
            表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="P:LibAnko.LiveLogInfo.Caster">
            <summary>
            主
            </summary>
        </member>
        <member name="P:LibAnko.LiveLogInfo.Comment">
            <summary>
            コメント数
            </summary>
        </member>
        <member name="P:LibAnko.LiveLogInfo.CommunityId">
            <summary>
            コミュニティーID
            </summary>
        </member>
        <member name="P:LibAnko.LiveLogInfo.CommunityName">
            <summary>
            コミュニティー名
            </summary>
        </member>
        <member name="P:LibAnko.LiveLogInfo.Date">
            <summary>
            放送日時
            </summary>
        </member>
        <member name="P:LibAnko.LiveLogInfo.LiveId">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:LibAnko.LiveLogInfo.LiveName">
            <summary>
            放送名
            </summary>
        </member>
        <member name="P:LibAnko.LiveLogInfo.User">
            <summary>
            ユーザID
            </summary>
        </member>
        <member name="P:LibAnko.LiveLogInfo.thread">
            <summary>
            thread
            </summary>
        </member>
        <member name="P:LibAnko.LiveLogInfo.room">
            <summary>
            立ち見
            </summary>
        </member>
        <member name="T:LibAnko.roomLevel">
            <summary>
            どこの立ち見席に所属するかフラグ
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.NotAvailable">
            <summary>
            使用されていない
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.Arena">
            <summary>
            アリーナ
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.StandingA">
            <summary>
            立ち見A
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.StandingB">
            <summary>
            立ち見B
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.StandingC">
            <summary>
            立ち見C
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.StandingD">
            <summary>
            立ち見D channel
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.StandingE">
            <summary>
            立ち見E channel
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.StandingF">
            <summary>
            立ち見F channel
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.StandingG">
            <summary>
            立ち見F channel
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.StandingH">
            <summary>
            立ち見F channel
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.StandingI">
            <summary>
            立ち見F channel
            </summary>
        </member>
        <member name="F:LibAnko.roomLevel.ProgramError">
            <summary>
            エラー
            </summary>
        </member>
        <member name="T:LibAnko.broadcast">
            <summary>
            放送の情報
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.liveid">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.standing">
            <summary>
            立ち見
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.title">
            <summary>
            放送タイトル
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.description">
            <summary>
            放送詳細
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.comment_lock">
            <summary>
            コメントロック状態
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.provider_type">
            <summary>
            コミュニティー種別
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.default_community">
            <summary>
            コミュニティID
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.base_time">
            <summary>
            BASE TIME
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.open_time">
            <summary>
            open_time
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.start_time">
            <summary>
            start_time
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.end_time">
            <summary>
            end_time
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.room_label">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.is_join">
            <summary>
            コミュニティ加入
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.is_owner">
            <summary>
            オーナーフラグ
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.archive">
            <summary>
            タイムシフトフラグ
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.room_seetno">
            <summary>
            シート番号
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.ms_addr">
            <summary>
            メッセージサーバーのアドレス
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.ms_port">
            <summary>
            メッセージサーバーのポート
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.ms_thread">
            <summary>
            スレッドID
            </summary>
        </member>
        <member name="F:LibAnko.broadcast._userDomain">
            <summary>
            国識別
            </summary>
        </member>
        <member name="F:LibAnko.broadcast._userLanguage">
            <summary>
            国言語識別
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.owner_id">
            <summary>
            主のID
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.is_premium">
            <summary>
            プレミアム契約
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.user_id">
            <summary>
            ユーザーID
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.owner">
            <summary>
            主の時getpublishstatusの結果への参照が設定される
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.status">
            <summary>
            ステータス なんだろう
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.CanPostComment">
            <summary>
            コメント投稿できるかフラグ
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.CountPerMin">
            <summary>
            分間コメント数
            </summary>
        </member>
        <member name="F:LibAnko.broadcast.nowtime">
            <summary>
            時間
            </summary>
        </member>
        <member name="F:LibAnko.broadcast.is_reserved">
            <summary>
            予約枠のとき1
            </summary>
        </member>
        <member name="F:LibAnko.broadcast.contents_list_contents">
            <summary>
            contents_list.contents
            </summary>
        </member>
        <member name="F:LibAnko.broadcast.rtmp_url">
            <summary>
            rtmp.url
            </summary>
        </member>
        <member name="F:LibAnko.broadcast.rtmp_ticket">
            <summary>
            rtmp.ticket
            </summary>
        </member>
        <member name="M:LibAnko.broadcast.makesub">
            サブにしちゃう
        </member>
        <member name="M:LibAnko.broadcast.ParseCastPage2(System.String)">
            <summary>
            
            </summary>
            <param name="res"></param>
            <returns></returns>
        </member>
        <member name="P:LibAnko.broadcast.LastNotify">
            <summary>
            最終通知時間
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.tagrev">
            <summary>
            タグリビジョン
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.tags">
            <summary>
            タグ
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.ended_time">
            <summary>
            終了時間
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.SetDisconnect">
            <summary>
            切断フラグ(Trueのときわざと切断しているので再接続しない)
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.RetryConnectCount">
            <summary>
            再接続カウント
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.MessageFrm">
            <summary>
            チャットウインドウ
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.NGManager">
            <summary>
            NG管理テーブル
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.is_ns_stream">
            <summary>
            Nsenフラグ
            </summary>
        </member>
        <member name="P:LibAnko.broadcast.nstype">
            <summary>
            Nsenタイプ
            </summary>
        </member>
        <member name="T:LibAnko.severParam">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.severParam.lvno">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.severParam.server">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.severParam.serverNum">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.severParam.port">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.severParam.#ctor(System.Int64,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="Lvno"></param>
            <param name="servernum"></param>
            <param name="Port"></param>
            <param name="user"></param>
        </member>
        <member name="T:LibAnko.CustImageLayout">
            <summary>
            拡張されたイメージレイアウト
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.Left">
            <summary>
            左寄せ
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.Right">
            <summary>
            右寄せ
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.TopLeft">
            <summary>
            上左寄せ
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.TopRight">
            <summary>
            上右寄せ
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.BottomLeft">
            <summary>
            下左寄せ
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.BottomRight">
            <summary>
            下右寄せ
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.Top">
            <summary>
            上に合わせる
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.Bottom">
            <summary>
            下に合わせる
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.Tile">
            <summary>
            並べる
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.Center">
            <summary>
            中央寄せ
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.Stretch">
            <summary>
            範囲内に収まるように拡大
            </summary>
        </member>
        <member name="F:LibAnko.CustImageLayout.Zoom">
            <summary>
            拡大
            </summary>
        </member>
        <member name="T:LibAnko.BufferedDataGridView">
            <summary>
            バッファーされたデータグリッドビュー
            </summary>
        </member>
        <member name="P:LibAnko.BufferedDataGridView.BackColorFromImage">
            <summary>
            背景カラーをイメージの左端から取得
            </summary>
        </member>
        <member name="P:LibAnko.BufferedDataGridView.BackImageLayout">
            <summary>
            背景イメージのレイアウト
            </summary>
        </member>
        <member name="M:LibAnko.BufferedDataGridView.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LibAnko.BufferedDataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            背景描画するメソッド
            </summary>
            <param name="graphics"></param>
            <param name="clipBounds"></param>
            <param name="gridBounds"></param>
        </member>
        <member name="P:LibAnko.BufferedDataGridView.backImage">
            <summary>
            背景
            </summary>
        </member>
        <member name="P:LibAnko.BufferedDataGridView.backImageluminance">
            <summary>
            色の濃さ
            </summary>
        </member>
        <member name="M:LibAnko.chat.trimSpace(System.String)">
            <summary>
            NG回避空白文字を削除します
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.chat.#ctor(System.String[],System.Boolean)">
            <summary>
            旧ログファイル
            </summary>
            <param name="c"></param>
            <param name="dmy"></param>
        </member>
        <member name="M:LibAnko.chat.#ctor(LibAnko.chat)">
            <summary>
            コマンド分析
            </summary>
            <param name="msg">分析するチャット</param>
            
        </member>
        <member name="T:LibAnko.EnumStringAttribute">
            <summary>
            列挙型のフィールドにラベル文字列を付加するカスタム属性です。
            </summary>
        </member>
        <member name="F:LibAnko.EnumStringAttribute.enumstr">
            <summary>
            ラベル文字列。
            </summary>
        </member>
        <member name="M:LibAnko.EnumStringAttribute.#ctor(System.String)">
            <summary>
            LabeledEnumAttribute クラスの新しいインスタンスを初期化します。
            </summary>
            ラベル文字列
        </member>
        <member name="M:LibAnko.EnumStringAttribute.GetLabel(System.Enum)">
            <summary>
            属性で指定されたラベル文字列を取得する。
            </summary>
            ラベル付きフィールド
            <returns>ラベル文字列</returns>
        </member>
        <member name="T:LibAnko.HeartBeatInfo">
            <summary>
            hertbeat
            </summary>
        </member>
        <member name="P:LibAnko.HeartBeatInfo.watch_count">
            <summary>
            来場者数
            </summary>
        </member>
        <member name="P:LibAnko.HeartBeatInfo.comment_count">
            <summary>
            総コメント数
            </summary>
        </member>
        <member name="P:LibAnko.HeartBeatInfo.freeSlotNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.HeartBeatInfo.ticket">
            <summary>
            ticket
            </summary>
        </member>
        <member name="P:LibAnko.HeartBeatInfo.status">
            <summary>
            ステータス
            </summary>
        </member>
        <member name="P:LibAnko.HeartBeatInfo.id">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:LibAnko.HeartBeatInfo.lastAccess">
            <summary>
            最終アクセス
            </summary>
        </member>
        <member name="M:LibAnko.HeartBeatInfo.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:LibAnko.HeartBeatInfo.Parse(System.Xml.XmlDocument)">
            <summary>
            パラメータ分解
            </summary>
            <param name="objXML"></param>
        </member>
        <member name="M:LibAnko.nicomovie.getMyListGroup">
            <summary>
            マイリスト一覧取得
            </summary>
            <returns>マイリスト一覧</returns>
        </member>
        <member name="M:LibAnko.nicomovie.getMyList(System.String,System.String)">
            <summary>
            マイリスト動画一覧取得
            </summary>
            <param name="groupid">マイリストID</param>
            <param name="token">トークン</param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.nicomovie.moveMyList(System.String,System.String,System.String[],System.String)">
            <summary>
            マイリスト移動
            </summary>
            <param name="groupid_from">元マイリストID</param>
            <param name="groupid_to">移動先マイリストID</param>
            <param name="id">動画ID</param>
            <param name="token">トークン</param>
            <returns>実行結果</returns>
        </member>
        <member name="M:LibAnko.nicomovie.addMyListItems(System.String,System.String,System.String)">
            <summary>
            マイリストに動画追加
            </summary>
            <param name="groupid">追加するグループ</param>
            <param name="id">動画ID</param>
            <param name="token">トークン</param>
            <returns>結果</returns>
        </member>
        <member name="M:LibAnko.nicomovie.UpdateMyList(LibAnko.MylistGroup,System.String,System.String)">
            <summary>
            マイリスト操作
            </summary>
            <param name="item"></param>
            <param name="ope"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.nicomovie.cutImage(System.Windows.Forms.ImageList,System.String,System.Drawing.Image)">
            <summary>
            マイリストグループアイコン取得
            </summary>
            <param name="iml">格納するImageListオブジェクト</param>
            <param name="namebase">名前のベース</param>
            <param name="img">イメージ</param>
        </member>
        <member name="M:LibAnko.niconicoBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.niconicoBase.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="mail"></param>
            <param name="password"></param>
        </member>
        <member name="M:LibAnko.niconicoBase.accessSite(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
        </member>
        <member name="P:LibAnko.nicoVideo.CookieHeader">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:LibAnko.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:LibAnko.Properties.Resources.Culture">
            <summary>
              厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="T:LibAnko.PropertyDisplayNameAttribute">
            <summary>
            プロパティ表示名を外部から設定するための属性。
            </summary>
        </member>
        <member name="T:LibAnko.PropertyDisplayConverter">
            <summary>
            プロパティ表示名でPropertyDisplayPropertyDescriptorクラスを使用するために
            TypeConverter属性に指定するためのTypeConverter派生クラス。
            </summary>
        </member>
        <member name="M:LibAnko.PropertyDisplayConverter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.PropertyDisplayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="instance"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.PropertyDisplayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:LibAnko.PropertyDisplayPropertyDescriptor">
            <summary>
            プロパティの説明（＝情報）を提供するクラス。DisplayNameをカスタマイズする。
            </summary>
        </member>
        <member name="M:LibAnko.PropertyDisplayPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            
            </summary>
            <param name="desc"></param>
        </member>
        <member name="M:LibAnko.PropertyDisplayPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="P:LibAnko.PropertyDisplayPropertyDescriptor.ComponentType">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.PropertyDisplayPropertyDescriptor.GetValue(System.Object)">
            <summary>
            
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="P:LibAnko.PropertyDisplayPropertyDescriptor.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.PropertyDisplayPropertyDescriptor.Category">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.PropertyDisplayPropertyDescriptor.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.PropertyDisplayPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:LibAnko.PropertyDisplayPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.PropertyDisplayPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="component"></param>
            <param name="value"></param>
        </member>
        <member name="P:LibAnko.PropertyDisplayPropertyDescriptor.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.PropertyDisplayPropertyDescriptor.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.RuleWindowMenu">
            <summary>
            ウィンドウメニュー操作用クラス。
            </summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MIIM_STATE">
            <summary>fState</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MIIM_ID">
            <summary>wID</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MIIM_SUBMENU">
            <summary>hSubMenu</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MIIM_CHECKMARKS">
            <summary>hbmpChecked, hbmpUnchecked</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MIIM_TYPE">
            <summary>fType(後方互換用)</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MIIM_DATA">
            <summary>dwItemData</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MIIM_STRING">
            <summary>dwTypeData</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MIIM_BITMAP">
            <summary>hbmpItem</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MIIM_FTYPE">
            <summary>fType</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MFT_STRING">
            <summary>後方互換用</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MFT_BITMAP">
            <summary>後方互換用</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MFT_MENUBARBREAK">
            <summary>
            メニューバーに対しはメニューアイテムを新しい行に配置する。ドロップダ
            ウンメニュー・サブメニュー・ショートカットメニューに対してはメニュー
            アイテムを新しい列に配置する。ドロップダウンメニュー・サブメニュー・
            ショートカットメニューでは新しい列との間に線が引かれる。
            </summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MFT_MENUBREAK">
            <summary>
            メニューバーに対してはメニューアイテムを新しい行に配置する。ドロップ
            ダウンメニュー・サブメニュー・ショートカットメニューに対してはメニュ
            ーアイテムを新しい列に配置する。ドロップダウンメニュー・サブメニュー
            ・ショートカットメニューでは新しい列との間には線は引かれない。
            </summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MFT_OWNERDRAW">
            <summary>
            オーナードロー・メニューアイテムであることを示す。メニューアイテムの
            描画をオーナーウィンドウが行なう。オーナーウィンドウは
            WM_MEASUREITEMメッセージおよびWM_DRAWITEMメッセージを処理する必要が
            ある。この値が指定された場合は、dwTypeData はアプリケーション定義値
            を表す。
            </summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MFT_RADIOCHECK">
            <summary>
            hbmpChecked メンバが 0 (NULL) のとき、チェックマークの代わりにラジオ
            ボタンを表示する。
            </summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MFT_SEPARATOR">
            <summary>セパレーター(区切り線)を表示する。</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MFT_RIGHTORDER">
            <summary>
            アラビア語やヘブライ語などのシステムで文字列を右から左に表示する。 
            </summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.MFT_RIGHTJUSTIFY">
            <summary>
            以降のアイテムをメニューバーの右側に配置する。メニューバーのアイテム
            のみに有効。
            </summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.form">
            <summary>ウィンドウメニューを操作するフォーム。</summary>
        </member>
        <member name="F:LibAnko.RuleWindowMenu.delegates">
            <summary>デリゲート・コレクション</summary>
        </member>
        <member name="M:LibAnko.RuleWindowMenu.#ctor(System.Windows.Forms.Form)">
            <summary>
            RuleWindowMenuの新しいインスタンスを初期化する。
            </summary>
            <param name="form">ウィンドウメニューを操作するフォーム。</param>
        </member>
        <member name="M:LibAnko.RuleWindowMenu.Add(System.String,System.Int32,System.Int32,System.Delegate)">
            <summary>
            メニュー・アイテムを追加する。
            </summary>
            <param name="str">メニューに表示する文字列。</param>
            <param name="id">メニューアイテムのID。</param>
            <param name="loc">挿入するメニューの場所。</param>
            <param name="onClick">
            メニューがクリックされたとき呼び出されるデリゲート
            </param>
        </member>
        <member name="M:LibAnko.RuleWindowMenu.ModifyCheck(System.Int32,System.Boolean)">
            <summary>
            メニュー項目のチェックマークをON/OFFする
            </summary>
            <param name="loc">メニューの位置</param>
            <param name="check">True・・・オン　False・・・オフ</param>
        </member>
        <member name="M:LibAnko.RuleWindowMenu.AddSeparator(System.Int32)">
            <summary>
            区切り線を追加する。
            </summary>
            <param name="loc">挿入する場所、指定なしで最後に追加</param>
        </member>
        <member name="M:LibAnko.RuleWindowMenu.WindowMenuProc(System.Windows.Forms.Message@)">
            <summary>
            formのWndProc()メソッドから呼ぶ。
            </summary>
            <param name="m">Windowsが送信するメッセージ。</param>
            <returns>処理された場合はtrue。それ以外の場合はfalse。</returns>
        </member>
        <member name="M:LibAnko.RuleWindowMenu.GetSystemMenu(System.IntPtr,System.UInt32)">
            <summary>
            ウィンドウメニュー(システムメニューまたはコントロールメニューとも呼
            ばれる)のハンドルを取得する。このハンドルはコピーであり、ウィンドウ
            メニューの変更に利用できる。ウィンドウメニューを既定の状態へ戻すこと
            もできる。
            </summary>
            <param name="hWnd">ウィンドウのハンドル</param>
            <param name="bRevert">元へ戻すかどうか</param>
            <returns>
            bRevert パラメータが FALSE の場合、ウィンドウメニューが内部でコピー
            され、コピー先のメニューハンドルが返る。bRevert パラメータが TRUE の
            場合、NULL が返る。
            </returns>
        </member>
        <member name="M:LibAnko.RuleWindowMenu.InsertMenuItem(System.IntPtr,System.UInt32,System.Boolean,LibAnko.RuleWindowMenu.MENUITEMINFO@)">
            <summary>
            メニューの指定された位置に新しいメニュー項目を挿入する。
            </summary>
            <param name="hMenu">メニューのハンドル</param>
            <param name="uItem">識別子または位置</param>
            <param name="fByPosition">uItem パラメータの意味</param>
            <param name="mii">メニュー項目の情報</param>
            <returns>
            関数が成功すると、0 以外の値が返る。関数が失敗すると、0 が返る。拡張
            エラー情報を取得するには、GetLastError() を使う。
            </returns>
        </member>
        <member name="T:LibAnko.RuleWindowMenu.MENUITEMINFO">
            <summary>
            メニューアイテムの情報を定義する。
            </summary>
        </member>
        <member name="T:LibAnko.running">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.running.#ctor(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="bg"></param>
        </member>
        <member name="M:LibAnko.running.#ctor(System.String,System.String,LibAnko.ProgressPosition,System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="message"></param>
            <param name="pos"></param>
            <param name="bg"></param>
        </member>
        <member name="M:LibAnko.running.setProgress(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:LibAnko.running.setDescription(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:LibAnko.running.Show(System.Windows.Forms.Form,LibAnko.running.running_method)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="method"></param>
        </member>
        <member name="M:LibAnko.running.SetPosition(LibAnko.ProgressPosition)">
            <summary>
            
            </summary>
            <param name="pos"></param>
        </member>
        <member name="T:LibAnko.running.running_method">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.running.components">
            <summary>
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:LibAnko.running.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:LibAnko.running.InitializeComponent">
            <summary>
            デザイナー サポートに必要なメソッドです。このメソッドの内容を
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="F:LibAnko.running.Description">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.running.progressBar1">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.ProgressPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.ProgressPosition.topLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.ProgressPosition.topRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.ProgressPosition.bottomLeft">
            <summary>
            /
            </summary>
        </member>
        <member name="F:LibAnko.ProgressPosition.bottomRight">
            <summary>
            
            </summary>
            
        </member>
        <member name="F:LibAnko.ProgressPosition.middleCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.ProgressPosition.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.VideoInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.ErrorMsg">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.HasError">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.VideoInfo.Parse(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
        </member>
        <member name="P:LibAnko.VideoInfo.IsEco">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.IsPremium">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.Link">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.MessageUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.ThreadId">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.VideoId">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.VideoType">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.VideoUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.VideoInfo.WatchUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.CastEventArgs.Liveid">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.CastEventArgs.#ctor(System.String)">
            <summary>
            
            
            </summary>
            <param name="Liveid"></param>
        </member>
        <member name="T:LibAnko.statusEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LibAnko.StatusMessageEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.StatusMessageEventArgs.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.StatusMessageEventArgs.talk">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.StatusMessageEventArgs.err">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.StatusMessageEventArgs.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="talk"></param>
            <param name="err"></param>
        </member>
        <member name="T:LibAnko.wakutoriCls">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.wakutoriCls.commnityLists">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.wakutoriCls.tagsLists">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.wakutoriCls.default_community">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.wakutoriCls.default_tag">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.wakutoriCls.high_quality">
            <summary>
            新配信(β)
            </summary>
        </member>
        <member name="F:LibAnko.wakutoriCls.reuseFields">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.wakutoriCls.debug">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.wakutoriCls.reuse">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.wakutoriCls.ErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.wakutoriCls.cookie">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.wakutoriCls.Boundary">
            <summary>
            
            </summary>
        </member>
        <member name="E:LibAnko.wakutoriCls.castStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.wakutoriCls.OnCastStart(LibAnko.CastEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:LibAnko.wakutoriCls.statusMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.wakutoriCls.OnstatusMessage(LibAnko.StatusMessageEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LibAnko.wakutoriCls.Str2MD5(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.wakutoriCls.bytesToHexString(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.wakutoriCls.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.wakutoriCls.pickTagStr(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="res"></param>
            <param name="starttag"></param>
            <param name="endtag"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.wakutoriCls.getCommuList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.wakutoriCls.getTagList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.wakutoriCls.cancel">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.wakutoriCls.ShowMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="talk"></param>
            <param name="err"></param>
        </member>
        <member name="M:LibAnko.wakutoriCls.PressStopButton(System.String)">
            <summary>
            
            </summary>
            <param name="broadcast"></param>
        </member>
        <member name="M:LibAnko.wakutoriCls.PressStartButton(System.String)">
            <summary>
            
            </summary>
            <param name="broadcast"></param>
        </member>
        <member name="M:LibAnko.wakutoriCls.StartBroadcast(LibAnko.BroadcastProfile,System.Boolean)">
            <summary>
            自動枠取り開始
            </summary>
            <param name="profile">パラーメータ</param>
            <param name="start">スタートまでさせる</param>
        </member>
        <member name="M:LibAnko.wakutoriCls.loadArraytagsList(System.Xml.Linq.XElement,System.String)">
            <summary>
            
            </summary>
            <param name="subcat"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.wakutoriCls.saveArrayTagsList(System.String,System.Collections.Generic.List{LibAnko.tagsList})">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="arraytags"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.wakutoriCls.saveWakutoriConfig(LibAnko.BroadcastProfile)">
            <summary>
            
            </summary>
            <param name="profile"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.wakutoriCls.loadWakutoriConfig(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xmldoc"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.wakutoriCls.getNewCastingCount(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="fname"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:LibAnko.tagsList">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.tagsList._tags">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.tagsList._lock">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.tagsList.tags">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.tagsList.Lock">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.tagsList.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="tags"></param>
            <param name="lock"></param>
        </member>
        <member name="T:LibAnko.XMLSock.ChatClient">
            <summary>
            
            </summary>
        </member>
        <member name="E:LibAnko.XMLSock.ChatClient.ConnectServer">
            <summary>
            コメント取得が開始されたときに発生するイベント
            </summary>
        </member>
        <member name="E:LibAnko.XMLSock.ChatClient.ConnectionError">
            <summary>
            接続に失敗したときに発生するイベント
            </summary>
        </member>
        <member name="E:LibAnko.XMLSock.ChatClient.DisconnectServer">
            <summary>
            サーバーから切断したときに発生するイベント
            </summary>
        </member>
        <member name="F:LibAnko.XMLSock.ChatClient._threadHeader">
            <summary>
            スレッド情報
            </summary>
        </member>
        <member name="F:LibAnko.XMLSock.ChatClient._asyncOperation">
            <summary>
            生成元のスレッドと同期を取るためのAsyncOperation
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ChatClient.IsConnected">
            <summary>
            サーバーに接続中かどうかを取得します
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ChatClient.IsDisconnecting">
            <summary>
            通信が中断状態にあるかどうかを取得・設定する
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.Connect(LibAnko.XMLSock.IMessageServerStatus,System.Int32)">
            <summary>
            コメント取得を開始する
            </summary>
            <param name="data"></param>
            <param name="resFrom"></param>
            <returns>成功・失敗</returns>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.Disconnect">
            <summary>
            接続を中断する
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.Initialize">
            <summary>
            状態を初期化する
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.ReadCallback(System.IAsyncResult)">
            <summary>
            サーバーからデータを受け取ったときに実行される
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.AnalayzeResponse(System.Byte[],System.Int32)">
            <summary>
            サーバーから受け取ったデータをブロックごとに分割して解析する
            </summary>
            <param name="buffer">読み込んだデータが格納されているバッファー</param>
            <param name="length">処理が必要なバイト数</param>
            <returns>処理したバイト数</returns>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.ParseReceivedData(System.Xml.XmlNode)">
            <summary>
            サーバーから受け取ったXMLデータを解析する
            オーバーライドする際は基底を呼び出さないとOnConnectServerイベントが発生しなくなる
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.SendMessge(System.String)">
            <summary>
            サーバーにメッセージを送る
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.OnConnectServer(LibAnko.XMLSock.ThreadHeader)">
            <summary>
            メッセージサーバーに接続したことを通知します。
            </summary>
            <param name="threadHeader"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.OnDisconnectServer">
            <summary>
            メッセージサーバーから切断したことを通知します。
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.OnConnectionError(System.Exception)">
            <summary>
            接続に失敗したことを通知します。
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:LibAnko.XMLSock.ChatClient.ConnectServerEventArgs">
            <summary>
            サーバーに接続した際に発生するイベントの引数
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ChatClient.ConnectServerEventArgs.ThreadHeader">
             <summary>
            ThreadHeaderを取得します
             </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.ConnectServerEventArgs.#ctor(LibAnko.XMLSock.ThreadHeader)">
            <summary>
            コメントを受信した際に発生するイベントの引数
            </summary>
            <param name="threadHeader"></param>
        </member>
        <member name="T:LibAnko.XMLSock.ChatClient.ConnectionErrorEventArgs">
            <summary>
            接続失敗時に発生するイベントの引数
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ChatClient.ConnectionErrorEventArgs.Exception">
            <summary>
            受信時点での最後のコメント番号
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.ConnectionErrorEventArgs.#ctor(System.Exception)">
            <summary>
            コメントを受信した際に発生するイベントの引数
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:LibAnko.XMLSock.ChatClient.StateObject">
            <summary>
            非同期通信用のオブジェクト
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatClient.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.XMLSock.ChatStream">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ChatStream.ping_time">
            <summary>
            応答時間ms
            </summary>
        </member>
        <member name="E:LibAnko.XMLSock.ChatStream.ConnectionError">
            <summary>
            
            </summary>
        </member>
        <member name="E:LibAnko.XMLSock.ChatStream.ConnectServer">
            <summary>
            
            </summary>
        </member>
        <member name="E:LibAnko.XMLSock.ChatStream.ReceiveChat">
            <summary>
            
            </summary>
        </member>
        <member name="E:LibAnko.XMLSock.ChatStream.ReceiveChatResult">
            <summary>
            
            </summary>
        </member>
        <member name="E:LibAnko.XMLSock.ChatStream.ReceivePing">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.OnReceiveChat(LibAnko.chat)">
            <summary>
            
            </summary>
            <param name="chat"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.OnConnectionError(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.OnConnectServer(LibAnko.ConnectServerEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.OnReceiveChatResult(LibAnko.ChatResult)">
            <summary>
            
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.OnReceivePing">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ChatStream.State">
            <summary>
            通信状態
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ChatStream.tcpClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.ReceiveChatAsync(LibAnko.broadcast,System.Int32)">
            <summary>
            非同期通信開始
            </summary>
            <param name="liveInfo"></param>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.ReadCallback(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.StopStream">
            <summary>
            通信停止
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.WriteRequestCallBack(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.PostComment(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="comment"></param>
            <param name="command"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.PostComment(System.String,System.String,System.Windows.Forms.TextBox)">
            <summary>
            
            </summary>
            <param name="comment"></param>
            <param name="command"></param>
            <param name="text"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.checkPostkey(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.sendKeepAlive">
            <summary>
            ping送信
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.StartDebugMode(LibAnko.broadcast)">
            <summary>
            デバッグモード開始
            </summary>
            <param name="cast"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.PostDebugComment(System.String,System.String,System.Int32,System.Windows.Forms.TextBox)">
            <summary>
            
            </summary>
            <param name="comment"></param>
            <param name="command"></param>
            <param name="isPremium"></param>
            <param name="text"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.PostDebugOwnerComment(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="comment"></param>
            <param name="command"></param>
            <param name="name"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ChatStream.PostDebugBSPComment(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="comment"></param>
            <param name="command"></param>
            <param name="name"></param>
        </member>
        <member name="T:LibAnko.XMLSock.AsyncState">
            <summary>
            通信状態
            </summary>
        </member>
        <member name="F:LibAnko.XMLSock.AsyncState.Idle">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.XMLSock.AsyncState.Running">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.XMLSock.AsyncState.Processing">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.XMLSock.AsyncState.Canceling">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.XMLSock.clsChatReceiver">
            <summary>
            
            </summary>
        </member>
        <member name="E:LibAnko.XMLSock.clsChatReceiver.ReceiveChat">
            <summary>
            チャットを受信したときに発生するイベント
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.Initialize">
            <summary>
            初期化を行います
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.clsChatReceiver.LastRes">
            <summary>
            最後に受け取ったコメント番号を取得します
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.ParseReceivedData(System.Xml.XmlNode)">
            <summary>
            サーバーから受け取ったXMLデータを解析する
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.ReceiveLog(LibAnko.broadcast,System.String,System.Int32)">
            <summary>
            過去1000件のログを取得する
            </summary>
            <param name="data"></param>
            <param name="cookies"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.ReceiveLog(LibAnko.broadcast,System.String,System.Int32,System.DateTime,System.Int32)">
            <summary>
            指定された時間以前の過去ログを取得する
            </summary>
            <param name="data"></param>
            <param name="cookies"></param>
            <param name="userId"></param>
            <param name="when">取得開始時間</param>
            <param name="resFrom"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.ReceiveAllLog(LibAnko.broadcast,System.String,System.Int32,System.DateTime)">
            <summary>
            放送の過去ログを取得する
            </summary>
            <param name="data"></param>
            <param name="cookies"></param>
            <param name="userId"></param>
            <param name="when"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.ReceiveAllLog(LibAnko.broadcast,System.Int32,System.DateTime)">
            <summary>
            放送の過去ログをすべて取得する
            </summary>
            <param name="data"></param>
            <param name="userId"></param>
            <param name="when"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.ReceiveLog(LibAnko.broadcast,System.Int32)">
            <summary>
            過去ログの取得
            </summary>
            <param name="data"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.OnReceiveChat(LibAnko.chat)">
            <summary>
            チャットを受信したことを通知します。
            </summary>
            <param name="chat"></param>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.OnConnectServer(LibAnko.XMLSock.ThreadHeader)">
            <summary>
            メッセージサーバーに接続したことを通知します。
            </summary>
            <param name="threadHeader"></param>
        </member>
        <member name="T:LibAnko.XMLSock.clsChatReceiver.ChatReceiveEventArgs">
            <summary>
            コメントを受信した際に発生するイベントの引数
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.clsChatReceiver.ChatReceiveEventArgs.#ctor(LibAnko.chat)">
            <summary>
            コメントを受信した際に発生するイベントの引数
            </summary>
            <param name="chat"></param>
        </member>
        <member name="P:LibAnko.XMLSock.clsChatReceiver.ChatReceiveEventArgs.Chat">
            <summary>
            受信したチャットを取得します
            </summary>
        </member>
        <member name="T:LibAnko.XMLSock.IMessageServerStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.IMessageServerStatus.Address">
            <summary>
            メッセージサーバーのアドレス
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.IMessageServerStatus.Port">
            <summary>
            メッセージサーバーのポート番号
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.IMessageServerStatus.Thread">
            <summary>
            スレッド番号
            </summary>
        </member>
        <member name="T:LibAnko.XMLSock.ThreadHeader">
            <summary>
            TreadHederを解析
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.ThreadHeader.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="threadXML"></param>
        </member>
        <member name="M:LibAnko.XMLSock.ThreadHeader.#ctor(System.Xml.XmlNode)">
            <summary>
            コンストラクタ
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:LibAnko.XMLSock.ThreadHeader.LastRes">
            <summary>
            最終コメント番号
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ThreadHeader.RresultCode">
            <summary>
            接続結果　0が成功
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ThreadHeader.Revision">
            <summary>
            リビジョン
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ThreadHeader.ServerTime">
            <summary>
            このデータが発行されたサーバー時間
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ThreadHeader.Thread">
            <summary>
            スレッド番号
            </summary>
        </member>
        <member name="P:LibAnko.XMLSock.ThreadHeader.Ticket">
            <summary>
            コメント投稿用のチケット
            </summary>
        </member>
        <member name="T:LibAnko.XMLSock.Waybackkey">
            <summary>
            Waybackkeyをサーバーから取得します
            </summary>
        </member>
        <member name="M:LibAnko.XMLSock.Waybackkey.GetInstance(System.Int32,System.String)">
            <summary>
            Waybackkeyをサーバーから取得します
            </summary>
            <param name="thread"></param>
            <param name="cookie"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.XMLSock.Waybackkey.GetInstance(System.Int32)">
            <summary>
            Waybackkeyをサーバーから取得します
            </summary>
            <param name="thread"></param>
            <returns></returns>
        </member>
        <member name="P:LibAnko.XMLSock.Waybackkey.Value">
            <summary>
            Waybackkeyを取得します
            </summary>
        </member>
        <member name="T:LibAnko.ReceivedMessageEventHandler">
            <summary>
            Message受信イベント
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LibAnko.ReceivedThreadEventHandler">
            <summary>
            Tread受信イベント
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LibAnko.ReceivedResultEventHandler">
            <summary>
            result受信イベント
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LibAnko.ReceivedErrorEventHandler">
            <summary>
            エラー発生イベント
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LibAnko.DisConnectEventHandler">
            <summary>
            切断イベント
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LibAnko.ConnectState">
            <summary>
            通信状態
            </summary>
        </member>
        <member name="F:LibAnko.ConnectState.NoConnect">
            <summary>
            コネクト待
            </summary>
        </member>
        <member name="F:LibAnko.ConnectState.Connected">
            <summary>
            コネクション後パラメータ送信待ち
            </summary>
        </member>
        <member name="F:LibAnko.ConnectState.waitThread">
            <summary>
            パラメータ送信後thread待ち
            </summary>
        </member>
        <member name="F:LibAnko.ConnectState.active">
            <summary>
            通信中
            </summary>
        </member>
        <member name="F:LibAnko.ConnectState.waitResult">
            <summary>
            コメント送信後返答待ち
            </summary>
        </member>
        <member name="T:LibAnko.ClsNicoXMLClient">
            <summary>
            ニコニコ用XMLsocket
            </summary>
        </member>
        <member name="E:LibAnko.ClsNicoXMLClient.ReceivedMessage">
            <summary>
            Message受信イベント
            </summary>
        </member>
        <member name="M:LibAnko.ClsNicoXMLClient.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LibAnko.ClsNicoXMLClient.Connect(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            サーバーに接続する
            </summary>
            <param name="host">サーバーのホスト名</param>
            <param name="port">ポート番号</param>
            <param name="thread">スレッド</param>
            <param name="liveid">放送ID</param>
            <param name="userid">ユーザID</param>
            <param name="IsPremium">プレミア</param>
            <param name="commentno">開始コメント番号</param>
            <param name="notify"></param>
        </member>
        <member name="M:LibAnko.ClsNicoXMLClient.Connect(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            サーバーに接続する
            </summary>
            <param name="host">サーバーのホスト名</param>
            <param name="port">ポート番号</param>
            <param name="thread">スレッド</param>
            <param name="userid">userid</param>
            <param name="IsPremium">Premiumかどうか</param>
            <param name="whentime">取得開始時間</param>
        </member>
        <member name="M:LibAnko.ClsNicoXMLClient.SendComment(System.String,System.String,System.Int32,System.String)">
            <summary>
            コメント送信
            </summary>
            <param name="comment"></param>
            <param name="command"></param>
            <param name="vpos"></param>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.ClsNicoXMLClient.PostComment(System.String,System.String,System.Windows.Forms.TextBox,System.Int32,System.String,System.Boolean)">
            <summary>
            コメント送信
            </summary>
            <param name="comment">メッセージ</param>
            <param name="command">コマンド</param>
            <param name="txt">テキストBOX</param>
            <param name="vpos">時間</param>
            <param name="locale">locale情報</param>
            <param name="official">公式？</param>
        </member>
        <member name="M:LibAnko.ClsNicoXMLClient.getNextlog(System.Int32)">
            <summary>
            次のログ取得
            </summary>
            <param name="when">時間</param>
        </member>
        <member name="M:LibAnko.ClsNicoXMLClient.getPostKey(System.String,System.String)">
            <summary>
            postキー取得
            </summary>
            <param name="threadId"></param>
            <param name="blockno"></param>
            <returns></returns>
        </member>
        <member name="M:LibAnko.ClsNicoXMLClient.OnConnected(System.EventArgs)">
            <summary>
            接続された時
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:LibAnko.ReceivedDataEventHandler">
            <summary>
            受信したデータを持つイベントを処理するメソッドを表す
            </summary>
        </member>
        <member name="T:LibAnko.clsTcpXMLClient">
            <summary>
            XMLSockクライアントの基本的な機能を提供する
            </summary>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.System#IDisposable#Dispose">
            <summary>
            破棄する
            </summary>
        </member>
        <member name="E:LibAnko.clsTcpXMLClient.ReceivedData">
            <summary>
            データを受信した
            </summary>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.OnReceivedData(LibAnko.ReceivedDataEventArgs)">
            <summary>
            TCPClientの受信イベント
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:LibAnko.clsTcpXMLClient.Connected">
            <summary>
            サーバーに接続した
            </summary>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.OnConnected(System.EventArgs)">
            <summary>
            サーバーに接続した
            </summary>
        </member>
        <member name="E:LibAnko.clsTcpXMLClient.Disconnected">
            <summary>
            サーバーから切断された、あるいは切断した
            </summary>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.OnDisconnected(System.EventArgs)">
            <summary>
            サーバーから切断された、あるいは切断した
            </summary>
        </member>
        <member name="P:LibAnko.clsTcpXMLClient.Encoding">
            <summary>
            使用する文字コード
            </summary>
        </member>
        <member name="P:LibAnko.clsTcpXMLClient.Client">
            <summary>
            基になるSocket
            </summary>
        </member>
        <member name="P:LibAnko.clsTcpXMLClient.LocalEndPoint">
            <summary>
            ローカルエンドポイント
            </summary>
        </member>
        <member name="P:LibAnko.clsTcpXMLClient.RemoteEndPoint">
            <summary>
            ローカルエンドポイント
            </summary>
        </member>
        <member name="P:LibAnko.clsTcpXMLClient.IsClosed">
            <summary>
            閉じているか
            </summary>
        </member>
        <member name="P:LibAnko.clsTcpXMLClient.MaxReceiveLenght">
            <summary>
            一回で受信できる最大バイト
            </summary>
        </member>
        <member name="P:LibAnko.clsTcpXMLClient.ReceivedBytes">
            <summary>
            受信したデータ
            </summary>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.#ctor(System.Net.Sockets.Socket)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.Connect(System.String,System.Int32)">
            <summary>
            サーバーに接続する
            </summary>
            <param name="host">ホスト名</param>
            <param name="port">ポート番号</param>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.Close">
            <summary>
            切断する
            </summary>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.Send(System.String)">
            <summary>
            文字列を送信する
            </summary>
            <param name="str">送信する文字列</param>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.SendMessage(System.String)">
            <summary>
            メッセージを送信する
            </summary>
            <param name="msg">送信するメッセージ</param>
        </member>
        <member name="M:LibAnko.clsTcpXMLClient.StartReceive">
            <summary>
            データの非同期受信を開始する
            </summary>
        </member>
        <member name="T:LibAnko.ReceivedDataEventArgs">
            <summary>
            ReceivedDataEventArgs の概要の説明です。
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedDataEventArgs.ReceivedString">
            <summary>
            受信データ
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedDataEventArgs.Client">
            <summary>
            XMLSocketオブジェクト
            </summary>
        </member>
        <member name="M:LibAnko.ReceivedDataEventArgs.#ctor(LibAnko.clsTcpXMLClient,System.String)">
            <summary>
            データ受信時コンストラクタ
            </summary>
            <param name="c"></param>
            <param name="str"></param>
        </member>
        <member name="T:LibAnko.ReceivedMessageEventArgs">
            <summary>
            ReceivedMessageEventArgs の概要の説明です。
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.liveid">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.Anonymity">
            <summary>
            匿名
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.Date">
            <summary>
            date
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.Mail">
            <summary>
            コマンド
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.No">
            <summary>
            No
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.Premium">
            <summary>
            premium
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.Thread">
            <summary>
            thread
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.UserId">
            <summary>
            userID
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.Vpos">
            <summary>
            vpos
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.Message">
            <summary>
            メッセージ
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.Name">
            <summary>
            名前
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.locale">
            <summary>
            地域
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.yourpost">
            <summary>
            自POSTコメント
            </summary>
            
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.date_usec">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedMessageEventArgs.score">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.ReceivedMessageEventArgs.#ctor(LibAnko.chat,System.String)">
            <summary>
            メッセージ受信時コンストラクタ
            </summary>
            <param name="chat"></param>
            <param name="id"></param>
        </member>
        <member name="M:LibAnko.ReceivedMessageEventArgs.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="id"></param>
        </member>
        <member name="M:LibAnko.ReceivedMessageEventArgs.#ctor(System.Xml.XmlNode,System.String)">
            <summary>
            メッセージ受信時コンストラクタ
            </summary>
            <param name="node"></param>
            <param name="id"></param>
        </member>
        <member name="M:LibAnko.ReceivedMessageEventArgs.trimSpace(System.String)">
            <summary>
            NG回避空白文字を削除します
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:LibAnko.ReceivedThreadEventArgs">
            <summary>
            ReceivedThreadEventArgs の概要の説明です。
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedThreadEventArgs.liveid">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedThreadEventArgs.thread">
            <summary>
            thread
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedThreadEventArgs.ticket">
            <summary>
            ticket
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedThreadEventArgs.last_res">
            <summary>
            最終コメント番号
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedThreadEventArgs.server_time">
            <summary>
            servertimeの値
            </summary>
        </member>
        <member name="M:LibAnko.ReceivedThreadEventArgs.#ctor(System.String,System.Int32,System.String)">
            <summary>
            thread受信時コンストラクタ
            </summary>
            <param name="lid"></param>
            <param name="thread"></param>
            <param name="str"></param>
        </member>
        <member name="M:LibAnko.ReceivedThreadEventArgs.#ctor(System.Xml.XmlNode)">
            <summary>
            thread受信時コンストラクタ
            </summary>
            <param name="node"></param>
        </member>
        <member name="T:LibAnko.ReceivedResultEventArgs">
            <summary>
            ReceivedResultEventArgs の概要の説明です。
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedResultEventArgs.liveid">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedResultEventArgs.status">
            <summary>
            ステータス
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedResultEventArgs.no">
            <summary>
            コメント番号
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedResultEventArgs.thread">
            <summary>
            thread
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedResultEventArgs.txt">
            <summary>
            textboxのオブジェクト
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedResultEventArgs.msg">
            <summary>
            送信メッセージ
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedResultEventArgs.postkeyErrorCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.ReceivedResultEventArgs.#ctor(System.String,System.String)">
            <summary>
            result受信時コンストラクタ
            </summary>
            <param name="str"></param>
            <param name="liveid"></param>
        </member>
        <member name="M:LibAnko.ReceivedResultEventArgs.#ctor(LibAnko.ReceivedResultEventArgs,System.Windows.Forms.TextBox,System.String,System.Int32)">
            <summary>
            result受信時コンストラクタ
            </summary>
            <param name="e"></param>
            <param name="txt"></param>
            <param name="msg"></param>
            <param name="errcount"></param>
        </member>
        <member name="M:LibAnko.ReceivedResultEventArgs.#ctor(System.Xml.XmlNode,System.String)">
            <summary>
            result受信時コンストラクタ
            </summary>
            <param name="node"></param>
            <param name="liveid"></param>
        </member>
        <member name="T:LibAnko.ReceivedErrorEventArgs">
            <summary>
            ReceivedErrorEventArgs の概要の説明です。
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedErrorEventArgs.ErrorMessage">
            <summary>
            エラーメッセージ
            </summary>
        </member>
        <member name="M:LibAnko.ReceivedErrorEventArgs.#ctor(System.String)">
            <summary>
            エラー発生時コンストラクタ
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:LibAnko.ReceivedChatEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.ReceivedChatEventArgs.#ctor(LibAnko.chat,System.String)">
            <summary>
            メッセージ受信時コンストラクタ
            </summary>
            <param name="chat"></param>
            <param name="id"></param>
        </member>
        <member name="P:LibAnko.ReceivedChatEventArgs.chat">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.ReceivedChatEventArgs.LiveId">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.ConnectServerEventArgs.liveid">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:LibAnko.ConnectServerEventArgs.thread">
            <summary>
            thread
            </summary>
        </member>
        <member name="P:LibAnko.ConnectServerEventArgs.ticket">
            <summary>
            ticket
            </summary>
        </member>
        <member name="P:LibAnko.ConnectServerEventArgs.last_res">
            <summary>
            最終コメント番号
            </summary>
        </member>
        <member name="P:LibAnko.ConnectServerEventArgs.server_time">
            <summary>
            servertimeの値
            </summary>
        </member>
        <member name="M:LibAnko.ConnectServerEventArgs.#ctor(System.String,System.Int32,System.String)">
            <summary>
            thread受信時コンストラクタ
            </summary>
            <param name="lid"></param>
            <param name="thread"></param>
            <param name="strXml"></param>
        </member>
        <member name="T:LibAnko.ReceivedPingEventArgs">
            <summary>
            ReceivedPingEvent
            </summary>
        </member>
        <member name="F:LibAnko.ReceivedPingEventArgs._stream">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.ReceivedPingEventArgs.#ctor(LibAnko.XMLSock.ChatStream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="P:LibAnko.ReceivedPingEventArgs.responseTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.DetectEndEventArgs._cast">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.DetectEndEventArgs.#ctor(LibAnko.broadcast)">
            <summary>
            
            </summary>
            <param name="cast"></param>
        </member>
        <member name="P:LibAnko.DetectEndEventArgs.cast">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.UserInfo">
            <summary>
            ユーザー情報
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.userid">
            <summary>
            ユーザーID
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.Coid">
            <summary>
            コミュニティーID
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.DisplayName">
            <summary>
            プロフィールに表示されている名前
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.CharaName">
            <summary>
            あとで付与したコテハン
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.backColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.foreColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.RegDate">
            <summary>
            登録日
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.LastUpdate">
            <summary>
            最終更新日
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.IconUrl">
            <summary>
            サムネURL
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.handleChangeCount">
            <summary>
            コテハン変更回数(保存されません)
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.bouyomi">
            <summary>
            棒読みちゃん声質
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.memo1">
            <summary>
            メモ１
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.memo2">
            <summary>
            メモ２
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.memo3">
            <summary>
            メモ３
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.premium">
            <summary>
            Premium
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.isMember">
            <summary>
            コミュニティーメンバーかどうか
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.isBSP">
            <summary>
            BSP持っているかどうか
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.islive_broadcast">
            <summary>
            放送権限持っているかどうか
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.status">
            <summary>
            ユーザーのステータス　bit位置で表現しています
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.force">
            <summary>
            ユーザが持つ権限　　bit位置で表現しています
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.count1Get">
            <summary>
            1コメント
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.delete">
            <summary>
            削除 onlyMemory
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.LastMessage">
            <summary>
            最後の発言 onlyMemory
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.LastChatDatetime">
            <summary>
            最終発言日時 onlyMemory
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.LastLimitDatetime">
            <summary>
            規制開始時間 onlyMemory
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.curCount">
            <summary>
            現放送発言回数 onlyMemory
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.CurLive">
            <summary>
            現放送ID onlyMemory
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.LastLive">
            <summary>
            前回放送ID onlyMemory
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.nicoVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.locale">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.lastNgScore">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.OutCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.ListenCast">
            <summary>
            そのたコミュの数
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.ListenCastHandle">
            <summary>
            そのたコミュでのコテハン
            </summary>
        </member>
        <member name="F:LibAnko.UserInfo.domain">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.UserInfo.icon">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.UserInfo.language">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.UserInfo.connectStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:LibAnko.UserInfo.rcvEnd">
            <summary>
            
            </summary>
        </member>
        <member name="M:LibAnko.UserInfo.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LibAnko.UserInfo.#ctor(System.Xml.Linq.XElement)">
            <summary>
            linqエレメントがソース
            </summary>
            <param name="ele"></param>
        </member>
        <member name="M:LibAnko.UserInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            コテハン登録用
            </summary>
            <param name="userid"></param>
            <param name="coid"></param>
            <param name="lid"></param>
        </member>
        <member name="M:LibAnko.UserInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            インポート用
            </summary>
            <param name="userid"></param>
            <param name="coid"></param>
            <param name="nickname"></param>
            <param name="memo"></param>
        </member>
        <member name="M:LibAnko.UserInfo.#ctor(System.String)">
            <summary>
            関数呼び出し時のもと用
            </summary>
            <param name="userid"></param>
        </member>
        <member name="M:LibAnko.UserInfo.#ctor(System.Data.SQLite.SQLiteDataReader)">
            <summary>
            SQLite用
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:LibAnko.UserInfo.#ctor(System.Data.SQLite.SQLiteDataReader,System.Int32)">
            <summary>
            
            </summary>
            <param name="record"></param>
            <param name="count"></param>
        </member>
        <member name="M:LibAnko.UserInfo.Parse(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:LibAnko.UserInfo.Parse(System.Data.SQLite.SQLiteDataReader,System.Int32)">
            <summary>
            
            </summary>
            <param name="record"></param>
            <param name="count"></param>
        </member>
        <member name="P:LibAnko.UserInfo.Commentcount">
            <summary>
            コメント数
            </summary>
        </member>
        <member name="P:LibAnko.UserInfo.ngcount">
            <summary>
            
            </summary>
        </member>
        <member name="T:LibAnko.ConnectEventArgs">
            <summary>
            ConnectEventArgs の概要の説明です。DisConnectでも使います
            </summary>
        </member>
        <member name="P:LibAnko.ConnectEventArgs.thread">
            <summary>
            thread番号
            </summary>
        </member>
        <member name="P:LibAnko.ConnectEventArgs.Client">
            <summary>
            xmlsockオブジェクト
            </summary>
        </member>
        <member name="M:LibAnko.ConnectEventArgs.#ctor(LibAnko.ClsNicoXMLClient,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="c"></param>
            <param name="thread"></param>
        </member>
        <member name="T:LibAnko.ownerInfo">
            <summary>
            オーナー情報　Getpublishstatus
            </summary>
        </member>
        <member name="P:LibAnko.ownerInfo.liveid">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:LibAnko.ownerInfo.token">
            <summary>
            トークン
            </summary>
        </member>
        <member name="P:LibAnko.ownerInfo.base_time">
            <summary>
            base time
            </summary>
        </member>
        <member name="P:LibAnko.ownerInfo.open_time">
            <summary>
            open time
            </summary>
        </member>
        <member name="P:LibAnko.ownerInfo.start_time">
            <summary>
            start time
            </summary>
        </member>
        <member name="P:LibAnko.ownerInfo.end_time">
            <summary>
            end time
            </summary>
        </member>
        <member name="P:LibAnko.ownerInfo.is_reserved">
            <summary>
            予約枠？
            </summary>
        </member>
        <member name="P:LibAnko.ownerInfo.allow_vote">
            <summary>
            アンケート許可
            </summary>
        </member>
        <member name="P:LibAnko.ownerInfo.status">
            <summary>
            status
            </summary>
        </member>
        <member name="M:LibAnko.ownerInfo.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LibAnko.ownerInfo.#ctor(System.Xml.XmlDocument)">
            <summary>
            コンストラクタ
            </summary>
            <param name="xml"></param>
        </member>
        <member name="T:LibAnko.community">
            <summary>
            コミュニティ情報
            </summary>
        </member>
        <member name="P:LibAnko.community.cid">
            <summary>
            コミュニティID
            </summary>
        </member>
        <member name="P:LibAnko.community.Name">
            <summary>
            コミュニティ名
            </summary>
        </member>
        <member name="P:LibAnko.community.Owner">
            <summary>
            主名
            </summary>
        </member>
        <member name="P:LibAnko.community.Level">
            <summary>
            レベル
            </summary>
        </member>
        <member name="P:LibAnko.community.thumbnail">
            <summary>
            thumbnail
            </summary>
        </member>
        <member name="P:LibAnko.community.thumbnail_small">
            <summary>
            thumbnail_small
            </summary>
        </member>
        <member name="M:LibAnko.community.#ctor(System.String,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="cid"></param>
            <param name="name"></param>
            <param name="Owner"></param>
        </member>
        <member name="T:LibAnko.userCommunity">
            <summary>
            コミュニティー依存ユーザ一覧
            </summary>
        </member>
        <member name="P:LibAnko.userCommunity.cid">
            <summary>
            コミュニティID
            </summary>
        </member>
        <member name="P:LibAnko.userCommunity.Name">
            <summary>
            コミュニティー名
            </summary>
        </member>
        <member name="P:LibAnko.userCommunity.id">
            <summary>
            ユーザーID
            </summary>
        </member>
        <member name="P:LibAnko.userCommunity.username">
            <summary>
            コテハン
            </summary>
        </member>
        <member name="M:LibAnko.userCommunity.ToString">
            <summary>
            一覧表示用
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibAnko.userCommunity.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="cid"></param>
            <param name="name"></param>
            <param name="uid"></param>
            <param name="username"></param>
        </member>
        <member name="T:LibAnko.MemberInfo">
            <summary>
            ユーザー情報
            </summary>
        </member>
        <member name="P:LibAnko.MemberInfo.userid">
            <summary>
            ユーザーID
            </summary>
        </member>
        <member name="P:LibAnko.MemberInfo.DisplayName">
            <summary>
            プロフィールに表示されている名前
            </summary>
        </member>
        <member name="M:LibAnko.MemberInfo.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.Parse(System.String)">
            <summary>from JsonSring to DynamicJson</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.Parse(System.String,System.Text.Encoding)">
            <summary>from JsonSring to DynamicJson</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.Parse(System.IO.Stream)">
            <summary>from JsonSringStream to DynamicJson</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.Parse(System.IO.Stream,System.Text.Encoding)">
            <summary>from JsonSringStream to DynamicJson</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.Serialize(System.Object)">
            <summary>create JsonSring from primitive or IEnumerable or Object({public property name:property value})</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.#ctor">
            <summary>create blank JSObject</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.IsDefined(System.String)">
            <summary>has property or not</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.IsDefined(System.Int32)">
            <summary>has property or not</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.Delete(System.String)">
            <summary>delete property</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.Delete(System.Int32)">
            <summary>delete property</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.Deserialize``1">
            <summary>mapping to Array or Class by Public PropertyName</summary>
        </member>
        <member name="M:Codeplex.Data.DynamicJson.ToString">
            <summary>Serialize to JsonString</summary>
        </member>
        <member name="T:ankoPlugin2.IChat">
            <summary>
            コメントを表現するインターフェース
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.Anonymity">
            <summary>
             匿名性
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.Date">
            <summary>
            投稿時刻
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.Mail">
            <summary>
             コマンド
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.Name">
            <summary>
             名前（運営コメント)
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.Message">
            <summary>
             コメント
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.No">
            <summary>
            コメント番号
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.Premium">
            <summary>
            投稿者の属性をあらわす数値
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.Thread">
            <summary>
            スレッドID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.UserId">
            <summary>
            ユーザーID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.Vpos">
            <summary>
             コメント位置
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChat.locale">
            <summary>
             地域
            </summary>
        </member>
        <member name="T:ankoPlugin2.IChatExt">
            <summary>
            コメントを表現するインターフェース
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChatExt.NickName">
            <summary>
             こてはん
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChatExt.ProfName">
            <summary>
             プロフィール
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChatExt.ForeColor">
            <summary>
            文字の色
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChatExt.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChatExt.IconPath">
            <summary>
            サムネアイコン
            </summary>
        </member>
        <member name="P:ankoPlugin2.IChatExt.standing">
            <summary>
            座席
            </summary>
        </member>
        <member name="T:ankoPlugin2.ICommunityInfo">
            <summary>
            コミュニティ情報インターフェース
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICommunityInfo.Coid">
            <summary>
            コミュニティID
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICommunityInfo.CommunityName">
            <summary>
            コミュニティ名
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICommunityInfo.MasterName">
            <summary>
            主名
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICommunityInfo.CommunityLevel">
            <summary>
            コミュニティレベル
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICommunityInfo.CommunityOnly">
            <summary>
            コミュニティ限定
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICommunityInfo.IconUrl">
            <summary>
            サムネイルパス
            </summary>
        </member>
        <member name="T:ankoPlugin2.IPlayerstatus">
            <summary>
            playerstatusを表現するインターフェース
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.status">
            <summary>
            ステータス
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.liveid">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.standing">
            <summary>
            座席
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.title">
            <summary>
            タイトル
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.description">
            <summary>
            放送詳細
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.owner_id">
            <summary>
            放送主ID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.comment_lock">
            <summary>
             コメントロック
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.provider_type">
            <summary>
            配信元種別
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.default_community">
            <summary>
            コミュID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.base_time">
            <summary>
            base_time
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.open_time">
            <summary>
            open_time
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.start_time">
            <summary>
            start_time
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.timefix">
            <summary>
            time_fix
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.room_label">
            <summary>
            部屋ラベル
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.is_join">
            <summary>
            コミュニティ参加
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.is_owner">
            <summary>
            放送主
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.archive">
            <summary>
            タイムシフト
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.room_seetno">
            <summary>
            座席番号
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.ms_addr">
            <summary>
            コメントサーバー
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.ms_port">
            <summary>
            ポート
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.ms_thread">
            <summary>
            スレッドID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.user_id">
            <summary>
            ユーザーID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.userDomain">
            <summary>
            地域
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.is_premium">
            <summary>
            プレミアム
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPlayerstatus.CanPostComment">
            <summary>
            コメント可否 オリジナルのみ可能
            </summary>
        </member>
        <member name="T:ankoPlugin2.IUserInfo">
            <summary>
            ユーザー情報インターフェース
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.userid">
            <summary>
             ユーザID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.Coid">
            <summary>
            コミュニティID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.DisplayName">
            <summary>
            プロフィール名
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.CharaName">
            <summary>
            ハンドル名
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.backColor">
            <summary>
            バックグラウンドカラー
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.RegDate">
            <summary>
            登録日
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.LastUpdate">
            <summary>
            最終更新日(プロフィール名)
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.IconUrl">
            <summary>
            サムネイルパス
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.handleChangeCount">
            <summary>
            コテハン変更回数
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.bouyomi">
            <summary>
            棒読み声
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.memo1">
            <summary>
            メモ1
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.memo2">
            <summary>
            メモ2
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.memo3">
            <summary>
            メモ3
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.premium">
            <summary>
            プレミアム
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.isMember">
            <summary>
            コミュ参加
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.status">
            <summary>
            ステータス
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.force">
            <summary>
            権限
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.count1Get">
            <summary>
            1Get回数
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.delete">
            <summary>
            削除 onlyMemory
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.LastMessage">
            <summary>
            最後の発言 onlyMemory
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.LastChatDatetime">
            <summary>
            最終発言日時 onlyMemory
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.curCount">
            <summary>
            現放送発言回数 onlyMemory
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.CurLive">
            <summary>
            現放送ID onlyMemory
            </summary>
        </member>
        <member name="P:ankoPlugin2.IUserInfo.Commentcount">
            <summary>
            トータル回数
            </summary>
        </member>
        <member name="T:ankoPlugin2.IPublishStatus">
            <summary>
            playerstatusを表現するインターフェース
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPublishStatus.status">
            <summary>
            ステータス
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPublishStatus.liveid">
            <summary>
            放送ID
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPublishStatus.token">
            <summary>
            トークン
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPublishStatus.base_time">
            <summary>
            開始時間
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPublishStatus.open_time">
            <summary>
            開始時間
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPublishStatus.start_time">
            <summary>
            開始時間
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPublishStatus.end_time">
            <summary>
            終了時間
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPublishStatus.is_reserved">
            <summary>
            予約有無
            </summary>
        </member>
        <member name="P:ankoPlugin2.IPublishStatus.allow_vote">
            <summary>
            アンケート有無
            </summary>
        </member>
        <member name="T:ankoPlugin2.ICastInfo">
            <summary>
            放送情報
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICastInfo.commentCount">
            <summary>
            コメント数
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICastInfo.last_res">
            <summary>
            最終
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICastInfo.lastno">
            <summary>
            最終受信番号
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICastInfo.enqStr">
            <summary>
            アンケート質問
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICastInfo.enqResult">
            <summary>
            アンケート結果
            </summary>
        </member>
        <member name="P:ankoPlugin2.ICastInfo.enqTitle">
            <summary>
            アンケートタイトル
            </summary>
        </member>
        <member name="T:nicoView2.MessageSetting">
            <summary>
            
            </summary>
        </member>
        <member name="P:nicoView2.MessageSetting.message_hb">
            <summary>
            
            </summary>
        </member>
        <member name="P:nicoView2.MessageSetting.message_hb_user">
            <summary>
            
            </summary>
        </member>
        <member name="P:nicoView2.MessageSetting.message_cm">
            <summary>
            
            </summary>
        </member>
        <member name="P:nicoView2.MessageSetting.message_cm_user">
            <summary>
            
            </summary>
        </member>
        <member name="P:nicoView2.MessageSetting.message_extend_alert">
            <summary>
            
            </summary>
        </member>
        <member name="P:nicoView2.MessageSetting.message_start">
            <summary>
            
            </summary>
        </member>
        <member name="P:nicoView2.MessageSetting.message_extended">
            <summary>
            
            </summary>
        </member>
        <member name="P:nicoView2.MessageSetting.message_NextWaku">
            <summary>
            
            </summary>
        </member>
        <member name="P:nicoView2.MessageSetting.def">
            <summary>
            デフォルト値
            </summary>
        </member>
        <member name="M:nicoView2.MessageSetting.#ctor">
            <summary>
            初期設定
            </summary>
        </member>
        <member name="M:nicoView2.MessageSetting.getNameValues">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:nicoView2.MessageSetting.LoadXElement(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xml"></param>
        </member>
        <member name="M:nicoView2.MessageSetting.SaveRows(System.Windows.Forms.DataGridViewRowCollection,System.String)">
            <summary>
            
            </summary>
            <param name="rows"></param>
            <param name="fname"></param>
        </member>
        <member name="M:nicoView2.MessageSetting.LoadRows(System.Windows.Forms.DataGridViewRowCollection)">
            <summary>
            
            </summary>
            <param name="rows"></param>
        </member>
        <member name="T:AdvancedDataGridView.TreeGridCell">
            <summary>
            Summary description for TreeGridCell.
            </summary>
        </member>
        <member name="T:AdvancedDataGridView.TreeGridView">
            <summary>
            Summary description for TreeGridView.
            </summary>
        </member>
    </members>
</doc>
